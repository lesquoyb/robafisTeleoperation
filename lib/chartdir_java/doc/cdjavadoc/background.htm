<HTML>
<HEAD>
<Title>Background and Wallpaper</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (Java Edition)</p>
<p class="heading1">Background and Wallpaper</p>
<hr class="separator">
<div class="content">
<img src="images/background0.png">&nbsp;&nbsp;<img src="images/background1.png">&nbsp;&nbsp;<img src="images/background2.png">&nbsp;&nbsp;<img src="images/background3.png">
<br><br>
This example demonstrates some of the background effects supported by ChartDirector.<br><br>
ChartDirector supports using an image file as the wallpaper of the chart image background with <a href="BaseChart.setWallpaper.htm">BaseChart.setWallpaper</a>, and as the plot area background with <a href="PlotArea.setBackground2.htm">PlotArea.setBackground2</a>.<br><br>
In addition to wallpapers, ChartDirector supports alternating plot area background colors using <a href="PlotArea.setBackground.htm">PlotArea.setBackground</a> and <a href="PlotArea.setAltBgColor.htm">PlotArea.setAltBgColor</a>.<br><br>
You can switch the default colors to using a dark background with white lines and text in one step by changing the color palette to a <a href="Chart.whiteOnBlackPalette.htm">whiteOnBlackPalette</a> using <a href="BaseChart.setColors.htm">BaseChart.setColors</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/background.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%@page import="javax.servlet.http.*" %&gt;
&lt;%!
// A simple structure to represent a chart image with an image map
private static class ImageWithHotSpot
{
    String imageURL;
    String imageMap;
}

// Function to create the demo charts
ImageWithHotSpot createChart(HttpServletRequest request, int chartIndex)
{
    // The data for the chart
    double[] data = {85, 156, 179.5, 211, 123};
    String[] labels = {"Mon", "Tue", "Wed", "Thu", "Fri"};

    // Create a XYChart object of size 270 x 270 pixels
    XYChart c = new XYChart(270, 270);

    //Set search path to current JSP directory for loading icon images
    c.setSearchPath(getServletConfig().getServletContext(), request);

    // Set the plot area at (40, 32) and of size 200 x 200 pixels
    PlotArea plotarea = c.setPlotArea(40, 32, 200, 200);

    // Set the background style based on the input parameter
    if (chartIndex == 0) {
        // Has wallpaper image
        c.setWallpaper("tile.gif");
    } else if (chartIndex == 1) {
        // Use a background image as the plot area background
        plotarea.setBackground2("bg.png");
    } else if (chartIndex == 2) {
        // Use white (0xffffff) and grey (0xe0e0e0) as two alternate plotarea background colors
        plotarea.setBackground(0xffffff, 0xe0e0e0);
    } else {
        // Use a dark background palette
        c.setColors(Chart.whiteOnBlackPalette);
    }

    // Set the labels on the x axis
    c.xAxis().setLabels(labels);

    // Add a color bar layer using the given data. Use a 1 pixel 3D border for the bars.
    c.addBarLayer3(data).setBorderColor(-1, 1);

    // Output the chart
    ImageWithHotSpot ret = new ImageWithHotSpot();
    ret.imageURL = c.makeSession(request, "chart" + chartIndex);

    // Include tool tip for the chart
    ret.imageMap = c.getHTMLImageMap("", "", "title='Revenue for {xLabel}: US${value}K'");

    return ret;
}
%&gt;
&lt;%
ImageWithHotSpot chart0 = createChart(request, 0);
ImageWithHotSpot chart1 = createChart(request, 1);
ImageWithHotSpot chart2 = createChart(request, 2);
ImageWithHotSpot chart3 = createChart(request, 3);
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Background and Wallpaper
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:10pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart0.imageURL)%&gt;'
    usemap="#map0" border="0"&gt;
&lt;map name="map0"&gt;&lt;%=chart0.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1.imageURL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=chart1.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart2.imageURL)%&gt;'
    usemap="#map2" border="0"&gt;
&lt;map name="map2"&gt;&lt;%=chart2.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart3.imageURL)%&gt;'
    usemap="#map3" border="0"&gt;
&lt;map name="map3"&gt;&lt;%=chart3.imageMap%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></td></tr></table><br><b>[Java Version]</b> javademo/background.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class background implements DemoModule
{
    //Name of demo program
    public String toString() { return "Background and Wallpaper"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 4; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int chartIndex)
    {
        // The data for the chart
        double[] data = {85, 156, 179.5, 211, 123};
        String[] labels = {"Mon", "Tue", "Wed", "Thu", "Fri"};

        // Create a XYChart object of size 270 x 270 pixels
        XYChart c = new XYChart(270, 270);

        // Set the plot area at (40, 32) and of size 200 x 200 pixels
        PlotArea plotarea = c.setPlotArea(40, 32, 200, 200);

        // Set the background style based on the input parameter
        if (chartIndex == 0) {
            // Has wallpaper image
            c.setWallpaper("tile.gif");
        } else if (chartIndex == 1) {
            // Use a background image as the plot area background
            plotarea.setBackground2("bg.png");
        } else if (chartIndex == 2) {
            // Use white (0xffffff) and grey (0xe0e0e0) as two alternate plotarea background colors
            plotarea.setBackground(0xffffff, 0xe0e0e0);
        } else {
            // Use a dark background palette
            c.setColors(Chart.whiteOnBlackPalette);
        }

        // Set the labels on the x axis
        c.xAxis().setLabels(labels);

        // Add a color bar layer using the given data. Use a 1 pixel 3D border for the bars.
        c.addBarLayer3(data).setBorderColor(-1, 1);

        // Output the chart
        viewer.setChart(c);

        //include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable", "",
            "title='Revenue for {xLabel}: US${value}K'"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new background();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);
        frame.getContentPane().setLayout(new FlowLayout(FlowLayout.LEFT));
        frame.setSize(800, 450);

        // Create the charts and put them in the content pane
        for (int i = 0; i &lt; demo.getNoOfCharts(); ++i)
        {
            ChartViewer viewer = new ChartViewer();
            demo.createChart(viewer, i);
            frame.getContentPane().add(viewer);
        }

        // Display the window
        frame.setVisible(true);
    }
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
