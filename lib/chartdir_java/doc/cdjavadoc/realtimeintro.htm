<HTML>
<HEAD>
<Title>Realtime Charts (Windows)</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">
<p class="heading0">ChartDirector 6.0 (Java Edition)</p>
<p class="heading1">Realtime Charts (Windows)</p>
<hr class="separator">
<div class="content"><div style="background-color:#cccccc;width:99%;padding:10px">
<b><font color="#FF0000">NOTE:</font></b> This section describes Realtime Charts for Windows applications only. For web applications, please refer to <a href="realtimeintroweb.htm">Realtime Charts (Web)</a>.
</div><br>
For Windows applications, a realtime chart may be achieved by simply redrawing the chart periodically.<br><br>
Typically, a data buffer is used to store the data to be displayed in the chart. A data update routine updates the values in the buffer in realtime. A charting routine uses the data in the buffer to create the chart.<br><br>
If the data update rate is not very fast (eg. once per second), one can simply redraw the chart immediately when the data buffer is updated.<br><br>
If the data update rate is very fast (eg. 1000 times per second), a better design is to update the data buffer and the chart asynchronously. In this case, the data update routine can still update the data buffer as fast as it needs to. The charting routine updates the chart at a slower rate, such as a few times per second. Essentially, the charting routine is taking a "snapshot" of the data buffer a few times per second and displays them on screen.<br><br>
To facilitate creation of realtime charts with fast update rate (faster than several times per second), the <a href="ChartViewer.htm">ChartViewer</a> control contains built-in rate control features. It ensures there is at least 20ms (configurable using <a href="ChartViewer.setUpdateInterval.htm">ChartViewer.setUpdateInterval</a>) between two consecutive chart updates. This allows the GUI to remain smooth and responsive even with extremely fast chart update rate.<br><br>
To use the rate control features of ChartDirector, instead of updating the chart directly, <a href="ChartViewer.updateViewPort.htm">ChartViewer.updateViewPort</a> may be used to trigger the ViewPortChanged event, and the chart is updated in the event handler. ChartViewer will ensure there is at least 20ms between two ViewPortChanged events, and will delay the event and merge multiple events into one event if necessary.</div><br>
<hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div></body>
</HTML>
