<HTML>
<HEAD>
<Title>Stacked Bar Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (Java Edition)</p>
<p class="heading1">Stacked Bar Chart</p>
<hr class="separator">
<div class="content">
<img src="images/stackedbar.png">
<br><br>
This example demonstrates creating a stacked bar chart, completed with bar labels and legend box.<br><br>
The key features demonstrated in this example are:<br><br>
<ul><li> Add a legend to the chart using <a href="BaseChart.addLegend.htm">BaseChart.addLegend</a>.<br><br>
<li> The legend box is configured to have no border by setting the border color to transparent using <a href="Box.setBackground.htm">Box.setBackground</a>.<br><br>
<li> By default, the legend icon has a black border. This is to allow white or light color icons to be more visible on a white background. In this example, no such colors are used, and the icon border is disabled by setting its color to the same as the icon fill color. This is by using <a href="LegendBox.setKeyBorder.htm">LegendBox.setKeyBorder</a> with <a href="Chart.SameAsMainColor.htm">SameAsMainColor</a>.<br><br>
<li> Add a stacked bar layer using <a href="XYChart.addBarLayer2.htm">XYChart.addBarLayer2</a> with the <a href="Chart.Stack.htm">Stack</a> predefined constant.<br><br>
<li> Add multiple data sets to the bar layer using <a href="Layer.addDataSet.htm">Layer.addDataSet</a>.<br><br>
<li> Add labels to the whole bar using <a href="Layer.setAggregateLabelStyle.htm">Layer.setAggregateLabelStyle</a>.<br><br>
<li> Add labels to the bar segments within a stacked bar using <a href="Layer.setDataLabelStyle.htm">Layer.setDataLabelStyle</a>.</ul>
For bar labels, <a href="Layer.setDataLabelStyle.htm">Layer.setDataLabelStyle</a> and <a href="Layer.setAggregateLabelStyle.htm">Layer.setAggregateLabelStyle</a> control the styles (fonts, colors, backgrounds, etc), while <a href="Layer.setDataLabelFormat.htm">Layer.setDataLabelFormat</a> and <a href="Layer.setAggregateLabelFormat.htm">Layer.setAggregateLabelFormat</a> control the formats (the label text, number of decimal points, etc). You can also add custom labels to the bars using <a href="Layer.addCustomDataLabel.htm">Layer.addCustomDataLabel</a>, <a href="Layer.addCustomAggregateLabel.htm">Layer.addCustomAggregateLabel</a> and <a href="Layer.addCustomGroupLabel.htm">Layer.addCustomGroupLabel</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/stackedbar.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// The data for the bar chart
double[] data0 = {100, 115, 165, 107, 67};
double[] data1 = {85, 106, 129, 161, 123};
double[] data2 = {67, 87, 86, 167, 157};

// The labels for the bar chart
String[] labels = {"Mon", "Tue", "Wed", "Thu", "Fri"};

// Create a XYChart object of size 600 x 360 pixels
XYChart c = new XYChart(600, 360);

// Set the plotarea at (70, 20) and of size 400 x 300 pixels, with transparent background and border
// and light grey (0xcccccc) horizontal grid lines
c.setPlotArea(70, 20, 400, 300, Chart.Transparent, -1, Chart.Transparent, 0xcccccc);

// Add a legend box at (480, 20) using vertical layout and 12pt Arial font. Set background and
// border to transparent and key icon border to the same as the fill color.
LegendBox b = c.addLegend(480, 20, true, "Arial", 12);
b.setBackground(Chart.Transparent, Chart.Transparent);
b.setKeyBorder(Chart.SameAsMainColor);

// Set the x and y axis stems to transparent and the label font to 12pt Arial
c.xAxis().setColors(Chart.Transparent);
c.yAxis().setColors(Chart.Transparent);
c.xAxis().setLabelStyle("Arial", 12);
c.yAxis().setLabelStyle("Arial", 12);

// Add a stacked bar layer
BarLayer layer = c.addBarLayer2(Chart.Stack);

// Add the three data sets to the bar layer
layer.addDataSet(data0, 0xaaccee, "Server # 1");
layer.addDataSet(data1, 0xbbdd88, "Server # 2");
layer.addDataSet(data2, 0xeeaa66, "Server # 3");

// Set the bar border to transparent
layer.setBorderColor(Chart.Transparent);

// Enable labelling for the entire bar and use 12pt Arial font
layer.setAggregateLabelStyle("Arial", 12);

// Enable labelling for the bar segments and use 12pt Arial font with center alignment
layer.setDataLabelStyle("Arial", 10).setAlignment(Chart.Center);

// For a vertical stacked bar with positive data, the first data set is at the bottom. For the
// legend box, by default, the first entry at the top. We can reverse the legend order to make the
// legend box consistent with the stacked bar.
layer.setLegendOrder(Chart.ReverseLegend);

// Set the labels on the x axis.
c.xAxis().setLabels(labels);

// For the automatic y-axis labels, set the minimum spacing to 40 pixels.
c.yAxis().setTickDensity(40);

// Add a title to the y axis using dark grey (0x555555) 14pt Arial Bold font
c.yAxis().setTitle("Y-Axis Title Placeholder", "Arial Bold", 14, 0x555555);

// Output the chart
String chart1URL = c.makeSession(request, "chart1");

// Include tool tip for the chart
String imageMap1 = c.getHTMLImageMap("", "",
    "title='{dataSetName} on {xLabel}: {value} MBytes/hour'");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Stacked Bar Chart
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:10pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=imageMap1%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></td></tr></table><br><b>[Java Version]</b> javademo/stackedbar.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class stackedbar implements DemoModule
{
    //Name of demo program
    public String toString() { return "Stacked Bar Chart"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int chartIndex)
    {
        // The data for the bar chart
        double[] data0 = {100, 115, 165, 107, 67};
        double[] data1 = {85, 106, 129, 161, 123};
        double[] data2 = {67, 87, 86, 167, 157};

        // The labels for the bar chart
        String[] labels = {"Mon", "Tue", "Wed", "Thu", "Fri"};

        // Create a XYChart object of size 600 x 360 pixels
        XYChart c = new XYChart(600, 360);

        // Set the plotarea at (70, 20) and of size 400 x 300 pixels, with transparent background
        // and border and light grey (0xcccccc) horizontal grid lines
        c.setPlotArea(70, 20, 400, 300, Chart.Transparent, -1, Chart.Transparent, 0xcccccc);

        // Add a legend box at (480, 20) using vertical layout and 12pt Arial font. Set background
        // and border to transparent and key icon border to the same as the fill color.
        LegendBox b = c.addLegend(480, 20, true, "Arial", 12);
        b.setBackground(Chart.Transparent, Chart.Transparent);
        b.setKeyBorder(Chart.SameAsMainColor);

        // Set the x and y axis stems to transparent and the label font to 12pt Arial
        c.xAxis().setColors(Chart.Transparent);
        c.yAxis().setColors(Chart.Transparent);
        c.xAxis().setLabelStyle("Arial", 12);
        c.yAxis().setLabelStyle("Arial", 12);

        // Add a stacked bar layer
        BarLayer layer = c.addBarLayer2(Chart.Stack);

        // Add the three data sets to the bar layer
        layer.addDataSet(data0, 0xaaccee, "Server # 1");
        layer.addDataSet(data1, 0xbbdd88, "Server # 2");
        layer.addDataSet(data2, 0xeeaa66, "Server # 3");

        // Set the bar border to transparent
        layer.setBorderColor(Chart.Transparent);

        // Enable labelling for the entire bar and use 12pt Arial font
        layer.setAggregateLabelStyle("Arial", 12);

        // Enable labelling for the bar segments and use 12pt Arial font with center alignment
        layer.setDataLabelStyle("Arial", 10).setAlignment(Chart.Center);

        // For a vertical stacked bar with positive data, the first data set is at the bottom. For
        // the legend box, by default, the first entry at the top. We can reverse the legend order
        // to make the legend box consistent with the stacked bar.
        layer.setLegendOrder(Chart.ReverseLegend);

        // Set the labels on the x axis.
        c.xAxis().setLabels(labels);

        // For the automatic y-axis labels, set the minimum spacing to 40 pixels.
        c.yAxis().setTickDensity(40);

        // Add a title to the y axis using dark grey (0x555555) 14pt Arial Bold font
        c.yAxis().setTitle("Y-Axis Title Placeholder", "Arial Bold", 14, 0x555555);

        // Output the chart
        viewer.setChart(c);

        //include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable", "",
            "title='{dataSetName} on {xLabel}: {value} MBytes/hour'"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new stackedbar();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
